name: Build and Push Docker Image

on:
  push:
    branches:
      - brechi/develop  # Trigger the workflow on push to the specified branch

  pull_request:
    branches:
      - brechi/develop  # Trigger the workflow on pull requests targeting the develop branch
    
  # Optionally, you can enable manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64
          
      # Build the Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}  # Get the repository name
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
          docker build --platform linux/arm64 -t "${IMAGE_NAME_LOWER}/smart-npc-poc:latest" .

      # Run the Docker image
      - name: Run Docker container
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}  # Get the repository name
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
          docker run -d --name smart-npc-poc -p 8000:8000 "${IMAGE_NAME_LOWER}/smart-npc-poc:latest"

      # Wait for the container to be ready
      - name: Wait for API to be ready
        run: |
          for i in {1..3}; do
            if curl -X GET "http://localhost:8000/test" | grep "200 OK" > /dev/null; then
              echo "API is up!"
              exit 0  # Exit successfully if the API is up
            fi
            echo "Waiting for API..."
            sleep 5
          done
          echo "API did not start properly. Exiting..."
          # exit 1  # Exit with an error if the API did not start

      - name: Print Docker container logs
        if: failure()  # Only run this step if the previous step failed
        run: |
          echo "Printing Docker logs for troubleshooting..."
          docker logs smart-npc-poc

      # Stop and remove the Docker container
      - name: Stop and remove Docker container
        run: |
          docker stop smart-npc-poc
          docker rm smart-npc-poc

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push the Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}  # Get the repository name
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
          docker push "${IMAGE_NAME_LOWER}/smart-npc-poc:latest"
    
    